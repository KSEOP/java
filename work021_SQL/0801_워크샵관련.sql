-- 대량의 샘플데이터 생성
-- CTAS (Create Table AS Select)
-- emp/dept 원본 테이블의 데이터를 그대로 샘플로 받아와서 새로운 테이블을 생성.
SELECT * FROM EMP;

-- EMP1 테이블 생성.
CREATE TABLE EMP1
AS
(SELECT * FROM EMP);


SELECT * FROM EMP1;

-- EMP2 테이블 생성
CREATE TABLE EMP2
AS
(SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP);

SELECT * FROM EMP2;

-- EMP3 테이블 생성
CREATE TABLE EMP3
AS
(SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP
WHERE DEPTNO = '10');

SELECT * FROM EMP3;

DESC EMP1;
-- CTAS는 정보를 그대로 가져오지만, 제약조건은 가져오지 않는다(PK 등)

/*
INSERT / DELETE / UPDATE


*/
-- NUMBER(7, 2) -- 전체 자리가 7자리, 그중 소수점 이하는 2자리 까지 커버하겠다 (=정수는 5자리 까지 커버)
DESC EMP3;

SELECT EMPNO, ENAME, SAL, DEPTNO FROM EMP3;

-- 1. INSERT
INSERT INTO EMP3 (EMPNO, ENAME, SAL, DEPTNO) VALUES(1111,'JAMES',2800,20);
-- 그냥 VALUES만 써도 되긴하나, 앞에 (//) 채워주는게 더 명확하긴 하다.


-- 2. UPDATE :: 1111 사번의 사원의 정보를 수정 / 2800 --> 2900, 20 --> 10 으로 수정
-- *** EMPNO(PK) 컬럼은 수정의 대상이 아니다. 즉 PK를 제외한 나머지 컬럼이 수정의 대상이 된다.
-- UPDATE문은 DML 중에서 쿼리를 틀릴 수 있는 여지가 가장 많음. 주의 필요.

UPDATE EMP3 SET ENAME='JAMES', SAL=2900, DEPTNO=10 WHERE EMPNO = 1111;
-- , 콤마로 연결함에 주의

--3. DELETE :: 1111 사번을 가진 사원을 삭제
--1) WHERE 부여  2) WHERE 지정 안하는 경우
DELETE EMP3 WHERE EMPNO=1111;
-- WHERE절 안주면 다 삭제됨. 즉 애초에 WHERE를 줘서 지우는게 DELETE의 용도임.

SELECT * FROM EMP2;

-- 시퀀스 생성하기

CREATE SEQUENCE ora_seq
start with 1
increment BY 1;

select ora_seq.nextVal FROM DUAL;

SELECT ORA_SEQ.CURRVAL FROM DUAL;

SELECT ORA_SEQ.NEXTVAL FROM DUAL;

CREATE SEQUENCE SEQ_MYMEMBER START WITH 1 INCREMENT BY 1;

CREATE TABLE MYMEMBER(
NO NUMBER PRIMARY KEY,
NAME VARCHAR2(30));

INSERT INTO MYMEMBER (NO, NAME) VALUES(SEQ_MYMEMBER.NEXTVAL, '홍길동');

INSERT INTO MYMEMBER (NO, NAME) VALUES(SEQ_MYMEMBER.NEXTVAL, '강감찬');

SELECT * FROM MYMEMBER;

COMMIT;

CREATE TABLE MEMBER (
ID NUMBER PRIMARY KEY,
NAME VARCHAR2(20),
EMAIL VARCHAR2(30),
PHONE VARCHAR2(30));

CREATE SEQUENCE SEQ_ID INCREMENT BY 1 START WITH 1;

COMMIT;


